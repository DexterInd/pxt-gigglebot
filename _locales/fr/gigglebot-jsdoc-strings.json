{
  "gigglebot": "blocs",
  "gigglebot.dewPoint": "Lecture du point de rosée",
  "gigglebot.distanceSensorReadRangeContinuous": "Prendre une lecture de la distance jusqu'à l'obstacle",
  "gigglebot.distanceSensorReadRangeSingle": "Prendre une lecture simple de la distance",
  "gigglebot.distanceSensorTestForObstacle": "Tester la présence d'un obstacle",
  "gigglebot.distanceSensorTestForObstacle|param|dist": "combien de millimètres; eg: 100",
  "gigglebot.distanceSensorTestForObstacle|param|inequality": "moins que ou plus que, plus proche que ou plus loin que",
  "gigglebot.driveMillisec": "Le GiggleBot avancera ou reculera pendant un certain nombre de millisecondes\nLa distance parcourue pendant ce temps dépend de la puissance des batteries.",
  "gigglebot.driveMillisec|param|delay": "pendant combien de millisecondes; eg: 1000",
  "gigglebot.driveMillisec|param|dir": "avancer ou reculer",
  "gigglebot.driveStraight": "Le GiggleBot avancera ou reculera jusqu'à ordre contraire (soit par un bloc Arrêt ou un autre bloc).",
  "gigglebot.driveStraight|param|dir": "avancer ou reculer",
  "gigglebot.gigglebotSpin": "Le GiggleBot pivotera sur lui-même jusqu'à ordre contraire, en restant sur place. Particulièrement utile pour dessiner.",
  "gigglebot.gigglebotSpin|param|turn_dir": "vers la gauche ou vers la droite;",
  "gigglebot.humidity": "Lecture de l'humidité à l'aide du capteur externe de température, humidité et pression.",
  "gigglebot.leftPower": "la puissance du moteur de gauche",
  "gigglebot.lightFollow": "Le GiggleBot ira vers la lumière. Si le robot se retrouve dans le noir, il arrêtera.",
  "gigglebot.lightFollowStatus": "Vrai si le robot est présentement en train de suivre une lumière.\nFaux autrement.",
  "gigglebot.lightFollow|param|light_threshold": "la quantité de luminosité requise pour considérer que le GigleBot est dans le noir, par exemple s'il est emprisonné dans une boîte; eg: 10",
  "gigglebot.lightFollow|param|mode": "suivre ou éviter la lumière",
  "gigglebot.lightFollow|param|sensitivity": "la différence requise entre les deux capteurs de lumière pour faire tourner le GiggleBot; eg: 20",
  "gigglebot.lightOrient": "Le GiggleBot s'orientera vers la lumière.\nPour que le GiggleBot suive la lumière, ce bloc doit être appelé plusieurs fois, comme dans une boucle par exemple.\n",
  "gigglebot.lightOrient|param|delay": "délai (en millisecondes) avant d'arrêter de tourner; eg: 200",
  "gigglebot.lightOrient|param|diff": "la différence entre les deux capteurs de lumière qui sera suffisante pour faire réagir le Gigglebot; eg: 50",
  "gigglebot.lightReadSensor": "Lire le capteur de lumière de gauche ou de droite. \nLes capteurs de lumière sont situés juste en avant des yeux, ils sont tout petits!\nLes valeurs vont de 0 à 1023, en réalité rarement plus que ~950.",
  "gigglebot.lightReadSensor|param|which": "gauche ou droite",
  "gigglebot.lightTest": "Vrai si les deux capteurs de lumière détectent une clarté, ou une obscurité.\n@param level: clair ou obscur\n@param threshold: le niveau de sensibilité. Plus ce nombre sera petit, plus le GiggleBot sera sensible aux petites variations.",
  "gigglebot.lineFollow": "Une ligne mince passera entre les deux capteurs et le GiggleBot arrêtera lorsque les deux capteurs détecteront du noir.\nUne large ligne noire sera plus large que la distance entre les deux capteurs. Le GiggleBot arrêtera lorsque les deux capteurs détecteront du blanc.\nLorsque ce bloc est exécuté, le GiggleBot se retrouve en mode 'suiveur de ligne'. Pour quitter le mode 'suiveur de ligne', exécutez le bloc 'arrêter le GiggleBot'." ,
  "gigglebot.lineFollowStatus": "Vrai lorsque le robot suit une ligne.\nFaux autrement.",
  "gigglebot.lineFollow|param|specific_line_threshold": "modifie la valeur par défaut du seuil de détection d'une ligne pour une meilleure adaptation à l'environnement du GiggleBot. La valeur par défaut est de 200.",
  "gigglebot.lineFollow|param|type_of_line": "ligne large ou mince.",
  "gigglebot.lineReadSensor": "Lit le capteur de gauche ou de droite.",
  "gigglebot.lineReadSensor|param|which": "gauche ou droite",
  "gigglebot.lineSensorsRaw": "Lit les deux capteurs",
  "gigglebot.lineTest": "Vrai si les deux capteurs détectent soit du noir, soit du blanc.\n@param color: noir ou blanc",
  "gigglebot.motorPowerAssign": "Assigne une puissance à un moteur, ou la même puissance aux deux moteurs\nLes valeurs possibles vont de 101 à 127, et les valeurs de -128 à -101 sont utilisés pour laisser le moteur aller sur son élan.\n@param motor:  moteur de gauche ou de droite, ou les deux\n@param power: une valeur entre -100 et 100",
  "gigglebot.motorPowerAssignBoth": "Assigne de nouvelles puissances potentiellement différentes aux deux moteurs en un seul bloc.  \nValues from 101 through 127, and -128 through -101 are used to float the  motor.\n@param left_power: la puissance du moteur de gauche (entre -100 et 100)\n@param right_power: la puissance du moteur de droite (entre -100 et 100)",
  "gigglebot.motorTrimSet": "Permet de corriger les moteurs lorsque le GiggleBot ne se déplace pas en ligne droite.\n@param dir: si le GiggleBot dévie vers la gauche, corriger vers la droite ou vice versa. \n@param trim_value: une valeur de correction entre 0 et 100, probablement en deça de 10",
  "gigglebot.motorTrimSetMain": "Permet de corriger les moteurs lorsque le GiggleBot ne se déplace pas en ligne droite.\n@param dir: si le GiggleBot dévie vers la gauche, corriger vers la droite ou vice versa. \n@param trim_value: une valeur de correction entre 0 et 100, probablement en deça de 10",
  "gigglebot.pressure": "Utilise le capteur ajouté de Température, humidité et pression pour retourner une lecture de la pression atmosphérique.",
  "gigglebot.rightPower": "la valeur courante de la puissance du moteur de droite",
  "gigglebot.servoMove": "Positionne un servomoteur à une position précise spéficiée en degrés",
  "gigglebot.readMotorPower": "Puissance du moteur de gauche ou de droite",
  "gigglebot.readMotorPower|param|which": "gauche ou droite",
  "gigglebot.servoMove|param|degree": "quelle position, de 0 à 180 degrés",
  "gigglebot.servoMove|param|which": "servomoteur de gauche ou de droite",
  "gigglebot.setLeftPower": "Assigne une puissance au moteur de gauche\nLes valeurs possibles vont de 101 à 127, et les valeurs de -128 à -101 sont utilisés pour laisser le moteur aller sur son élan.\n@param motor:  moteur de gauche ou de droite, ou les deux\n@param power: une valeur entre -100 et 100",
  "gigglebot.setLeftPower|param|leftpower": "nouvelle valeur de la puissance du moteur de gauche (-100 < leftpower < 100). Les valeurs de 101 à 127 ou de -128 à -101 privent le moteur de sa puissance.",
  "gigglebot.setLineFollowerThreshold": "Une méthode purement Javascript permettant de changer le seuil de réponse du détecteur de ligne.",
  "gigglebot.setRightPower": "Assigne une puissance au moteur de droite\nLes valeurs possibles vont de 101 à 127, et les valeurs de -128 à -101 sont utilisés pour laisser le moteur aller sur son élan.\n@param motor:  moteur de gauche ou de droite, ou les deux\n@param power: une valeur entre -100 et 100",
  "gigglebot.setRightPower|param|rightpower": "nouvelle valeur de la puissance du moteur de droite (-100 < leftpower < 100). Les valeurs de 101 à 127 ou de -128 à -101 privent le moteur de sa puissance.",
  "gigglebot.setSpeed": "Ajuste la vitesse de chacun des moteurs, ou les deux en même temps. Plus le GiggleBot va vite, moins il sera précis.\nIl est possible que les moteurs aient besoin d'être corrigés avec le bloc correspondant. Plus le GiggleBot est rapide plus il aura besoin de correction\nPour suivre une ligne il est préférable d'y aller à vitesse lente.\nLa vitesse dépend de la puissance des batteries.\n@param motor: gauche, droite, ou les deux\n@param speed: la vitesse du robot.",
  "gigglebot.spinMillisec": "Le GiggleBot pivotera sur place pendant X millisecondes, en restant sur place. Très pratique pour dessiner.",
  "gigglebot.spinMillisec|param|delay": "combien de millisecondes; eg: 1000",
  "gigglebot.spinMillisec|param|turn_dir": "tourner vers la gauche ou vers la droite",
  "gigglebot.steer": "Le GiggleBot avancera en courbant vers la droite ou la gauche.\nUtile pour contourner un obstacle ou pour être en orbite autour d'un objet.\n0% indique aucune courbure et revient à avancer, 100% donne le même résultat que le bloc Tourner",
  "gigglebot.steerMillisec": "Le GiggleBot avancera en courbant vers la droite ou la gauche pendant X millisecondes. \nUtile pour contourner un obstacle ou pour être en orbite autour d'un objet.\n0% indique aucune courbure et revient à avancer, 100% donne le même résultat que le bloc Tourner",
  "gigglebot.steerMillisec|param|delay": "combien de millisecondes; eg: 1000",
  "gigglebot.steerMillisec|param|dir": "courber vers la droite ou vers la gauche",
  "gigglebot.steerMillisec|param|percent": "la différence de puissance entre le moteur gauche et le moteur droit; eg: 0, 20, 50, 100",
  "gigglebot.steer|param|dir": "vers la droite ou vers la gauche",
  "gigglebot.steer|param|percent": "une valeur entre 0 et 100 qui contrôle la courbe",
  "gigglebot.stop": "Le robot s'arrêtera.",
  "gigglebot.temperature": "Utilise le capteur externe de température, humidité et pression pour retourner la lecture de la température ambiante.",
  "gigglebot.turn": "Le GiggleBot tournera vers la gauche ou la droite tant qu'un autre bloc ne l'interrompe.",
  "gigglebot.turnMillisec": "Le GiggleBot tournera vers la gauche ou la droite pendant X millisecondes.",
  "gigglebot.turnMillisec|param|delay": "combien de millisecondes; eg: 1000",
  "gigglebot.turnMillisec|param|turn_dir": "vers la gauche ou vers la droite",
  "gigglebot.voltageShow": "Affiche le voltage des batteries. Moins que 3.4 indique des batteries trop faibles pour faire bouger le GiggleBot",
  "gigglebotWhichUniqueMotor": ""
}
